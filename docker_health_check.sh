#!/bin/bash

# ‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡πÄ‡∏ä‡πá‡∏Ñ‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏£‡∏∞‡∏ö‡∏ö Docker
# ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö Docker Engine 26.1.4 ‡πÅ‡∏•‡∏∞ Docker Compose v2.27.1

echo "üè• ‡πÄ‡∏ä‡πá‡∏Ñ‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏£‡∏∞‡∏ö‡∏ö Docker"
echo "========================="

# ‡πÄ‡∏ä‡πá‡∏Ñ Docker versions
echo "üìã ‡πÄ‡∏ä‡πá‡∏Ñ Docker Versions:"
echo "  Docker Engine: $(docker --version | awk '{print $3}' | sed 's/,//')"
echo "  Docker Compose: $(docker-compose --version | awk '{print $4}' | sed 's/,//')"
echo "  Containerd: $(containerd --version | awk '{print $3}')"
echo ""

# ‡πÄ‡∏ä‡πá‡∏Ñ Docker daemon
echo "üîß ‡πÄ‡∏ä‡πá‡∏Ñ Docker Daemon:"
if sudo systemctl is-active --quiet docker; then
    echo "  ‚úÖ Docker daemon ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥"
else
    echo "  ‚ùå Docker daemon ‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô"
    echo "  üí° ‡∏•‡∏≠‡∏á‡∏£‡∏±‡∏ô: sudo systemctl start docker"
fi
echo ""

# ‡πÄ‡∏ä‡πá‡∏Ñ Docker containers
echo "üê≥ ‡πÄ‡∏ä‡πá‡∏Ñ Docker Containers:"
docker-compose ps
echo ""

# ‡πÄ‡∏ä‡πá‡∏Ñ health checks
echo "‚ù§Ô∏è ‡πÄ‡∏ä‡πá‡∏Ñ Container Health:"
for container in $(docker-compose ps -q); do
    container_name=$(docker inspect --format='{{.Name}}' $container | sed 's/^\/*//')
    health_status=$(docker inspect --format='{{.State.Health.Status}}' $container 2>/dev/null)
    
    if [ "$health_status" = "healthy" ]; then
        echo "  ‚úÖ $container_name: Healthy"
    elif [ "$health_status" = "unhealthy" ]; then
        echo "  ‚ùå $container_name: Unhealthy"
    elif [ "$health_status" = "starting" ]; then
        echo "  üü° $container_name: Starting"
    else
        echo "  ‚ö™ $container_name: No health check"
    fi
done
echo ""

# ‡πÄ‡∏ä‡πá‡∏Ñ resource usage
echo "üíæ ‡πÄ‡∏ä‡πá‡∏Ñ Resource Usage:"
echo "  Memory Usage:"
docker stats --no-stream --format "table {{.Container}}\t{{.CPUPerc}}\t{{.MemUsage}}\t{{.MemPerc}}"
echo ""

# ‡πÄ‡∏ä‡πá‡∏Ñ disk usage
echo "üíø ‡πÄ‡∏ä‡πá‡∏Ñ Disk Usage:"
sudo docker system df
echo ""

# ‡πÄ‡∏ä‡πá‡∏Ñ logs sizes
echo "üìä ‡πÄ‡∏ä‡πá‡∏Ñ Logs Sizes:"
echo "  Application logs:"
du -sh ./logs/ 2>/dev/null || echo "    ‡πÑ‡∏°‡πà‡∏û‡∏ö logs directory"

echo "  Container logs:"
total_size=$(sudo du -sh /var/lib/docker/containers/ 2>/dev/null | awk '{print $1}')
echo "    Total: $total_size"
echo ""

# ‡πÄ‡∏ä‡πá‡∏Ñ network connectivity
echo "üåê ‡πÄ‡∏ä‡πá‡∏Ñ Network Connectivity:"
if docker network ls | grep -q "gold-predict-web-be_default"; then
    echo "  ‚úÖ Docker network ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥"
else
    echo "  ‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö Docker network"
fi

# ‡πÄ‡∏ä‡πá‡∏Ñ port availability
echo "  Port availability:"
for port in 8000 5432 6379; do
    if ss -tuln | grep ":$port " > /dev/null; then
        echo "    ‚úÖ Port $port: ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà"
    else
        echo "    ‚ö™ Port $port: ‡∏ß‡πà‡∏≤‡∏á"
    fi
done
echo ""

# ‡πÄ‡∏ä‡πá‡∏Ñ log rotation
echo "üîÑ ‡πÄ‡∏ä‡πá‡∏Ñ Log Rotation Settings:"
if [ -f /etc/docker/daemon.json ]; then
    if grep -q "log-opts" /etc/docker/daemon.json; then
        echo "  ‚úÖ Log rotation ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÅ‡∏•‡πâ‡∏ß"
        max_size=$(sudo grep -A 5 "log-opts" /etc/docker/daemon.json | grep "max-size" | awk -F'"' '{print $4}')
        max_file=$(sudo grep -A 5 "log-opts" /etc/docker/daemon.json | grep "max-file" | awk -F'"' '{print $4}')
        echo "    Max size: $max_size, Max files: $max_file"
    else
        echo "  ‚ö†Ô∏è Log rotation ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤"
    fi
else
    echo "  ‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå daemon.json"
fi
echo ""

# ‡πÄ‡∏ä‡πá‡∏Ñ recent errors
echo "‚ùó ‡πÄ‡∏ä‡πá‡∏Ñ Recent Errors (24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏°‡∏≤):"
error_count=0
for container in $(docker-compose ps -q); do
    container_name=$(docker inspect --format='{{.Name}}' $container | sed 's/^\/*//')
    errors=$(docker logs --since="24h" $container 2>&1 | grep -i "error\|exception\|fatal" | wc -l)
    if [ $errors -gt 0 ]; then
        echo "  ‚ö†Ô∏è $container_name: $errors errors"
        error_count=$((error_count + errors))
    fi
done

if [ $error_count -eq 0 ]; then
    echo "  ‚úÖ ‡πÑ‡∏°‡πà‡∏û‡∏ö errors ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö"
else
    echo "  ‚ö†Ô∏è ‡∏£‡∏ß‡∏°: $error_count errors"
fi
echo ""

# ‡∏™‡∏£‡∏∏‡∏õ
echo "üìù ‡∏™‡∏£‡∏∏‡∏õ:"
echo "======="
if sudo systemctl is-active --quiet docker && [ $error_count -eq 0 ]; then
    echo "‚úÖ ‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥ ‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏î‡∏µ!"
else
    echo "‚ö†Ô∏è ‡∏£‡∏∞‡∏ö‡∏ö‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ö‡∏≤‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á ‡∏Ñ‡∏ß‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö"
fi
